"""
Dihya â€“ Django SantÃ© API Views Ultra AvancÃ©
------------------------------------------
- ViewSets REST pour patients, dossiers, rendez-vous, prescriptions, logs, audit, IA, plugins
- SÃ©curitÃ©, RBAC, logs, conformitÃ© RGPD/NIS2, multilingue, extensibilitÃ©, fallback IA
- PrÃªt pour CI/CD, Codespaces, cloud souverain, production, dÃ©mo, contribution

ðŸ‡«ðŸ‡· Vues Django REST SantÃ© (sÃ©curitÃ©, multilingue, souverainetÃ©)
ðŸ‡¬ðŸ‡§ Django REST Health views (security, multilingual, sovereignty)
ðŸ‡¦ðŸ‡ª Ø¹Ø±ÙˆØ¶ Django REST Ù„Ù„ØµØ­Ø© (Ø§Ù„Ø£Ù…Ø§Ù†ØŒ Ù…ØªØ¹Ø¯Ø¯ Ø§Ù„Ù„ØºØ§ØªØŒ Ø§Ù„Ø³ÙŠØ§Ø¯Ø©)
âµ£ Tiwaliwin Django REST n SantÃ© (amatu, multilingual, sovereignty)
"""

from rest_framework import viewsets, permissions, status
from rest_framework.response import Response
from .serializers import *
from .models import *
from .permissions import IsAdminOrReadOnly, IsOwnerOrReadOnly
from .audit import audit_log

class PatientViewSet(viewsets.ModelViewSet):
    queryset = Patient.objects.all()
    serializer_class = PatientSerializer
    permission_classes = [permissions.IsAuthenticatedOrReadOnly, IsOwnerOrReadOnly]

    def perform_create(self, serializer):
        instance = serializer.save(owner=self.request.user)
        audit_log(self.request.user, 'create_patient', instance)

class DossierViewSet(viewsets.ModelViewSet):
    queryset = Dossier.objects.all()
    serializer_class = DossierSerializer
    permission_classes = [permissions.IsAuthenticatedOrReadOnly]

class RendezVousViewSet(viewsets.ModelViewSet):
    queryset = RendezVous.objects.all()
    serializer_class = RendezVousSerializer
    permission_classes = [permissions.IsAuthenticatedOrReadOnly]

class PrescriptionViewSet(viewsets.ModelViewSet):
    queryset = Prescription.objects.all()
    serializer_class = PrescriptionSerializer
    permission_classes = [permissions.IsAuthenticatedOrReadOnly]

class IASanteViewSet(viewsets.ViewSet):
    permission_classes = [permissions.IsAuthenticated]

    def list(self, request):
        # TODO: IntÃ©gration IA souveraine, fallback open source
        return Response({'recommendations': []})

class AuditLogViewSet(viewsets.ReadOnlyModelViewSet):
    queryset = AuditLog.objects.all()
    serializer_class = AuditLogSerializer
    permission_classes = [permissions.IsAdminUser]
