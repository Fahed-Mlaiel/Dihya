"""
Dihya â€“ Django Juridique API Routes Ultra AvancÃ©
------------------------------------------------
- Endpoints REST pour contrats, documents, signatures, litiges, conformitÃ©, audits, IA juridique, logs, audit
- SÃ©curitÃ©, RBAC, logs, chiffrement, conformitÃ© RGPD/NIS2, multilingue, extensibilitÃ©
- PrÃªt pour CI/CD, Codespaces, cloud souverain, production, dÃ©mo, contribution

ğŸ‡«ğŸ‡· Routes Django REST juridique (sÃ©curitÃ©, multilingue, souverainetÃ©)
ğŸ‡¬ğŸ‡§ Django REST legal routes (security, multilingual, sovereignty)
ğŸ‡¦ğŸ‡ª Ù…Ø³Ø§Ø±Ø§Øª Django REST Ø§Ù„Ù‚Ø§Ù†ÙˆÙ†ÙŠØ© (Ø§Ù„Ø£Ù…Ø§Ù†ØŒ Ù…ØªØ¹Ø¯Ø¯ Ø§Ù„Ù„ØºØ§ØªØŒ Ø§Ù„Ø³ÙŠØ§Ø¯Ø©)
âµ£ Iwalen Django REST n tazwart n tazult (amatu, multilingual, sovereignty)
"""

from rest_framework import routers
from django.urls import path, include
from . import views

router = routers.DefaultRouter()
router.register(r'contrats', views.ContratViewSet, basename='contrat')
router.register(r'documents', views.DocumentViewSet, basename='document')
router.register(r'signatures', views.SignatureViewSet, basename='signature')
router.register(r'litiges', views.LitigeViewSet, basename='litige')
router.register(r'conformite', views.ConformiteViewSet, basename='conformite')
router.register(r'audits', views.AuditViewSet, basename='audit')
router.register(r'ia', views.IAJuridiqueViewSet, basename='ia-juridique')
router.register(r'notifications', views.NotificationViewSet, basename='notification')
router.register(r'audit/logs', views.AuditLogViewSet, basename='audit-log')

urlpatterns = [
    path('', include(router.urls)),
]

# SÃ©curitÃ©â€¯: endpoints protÃ©gÃ©s JWT, RBAC, logs, chiffrement, audit, conformitÃ© RGPD/NIS2
# Multilingueâ€¯: tous les messages dâ€™erreur/succÃ¨s sont traduits (voir serializers.py)
# Extensibleâ€¯: ajoutez vos endpoints (analyse IA, open data, gÃ©nÃ©ration doc, etc.)
# PrÃªt CI/CD, Codespaces, cloud souverain, production, dÃ©mo, contribution
