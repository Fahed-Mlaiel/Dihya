"""
Dihya â€“ Django Science API Routes Ultra AvancÃ©
----------------------------------------------
- Endpoints REST pour publications, projets, expÃ©riences, jeux de donnÃ©es, lab notebooks, chercheurs, institutions, IA science, notifications, rapports, logs, audit
- SÃ©curitÃ©, RBAC, logs, chiffrement, conformitÃ© RGPD/NIS2, anonymisation, traÃ§abilitÃ© scientifique, multilingue, extensibilitÃ©, fallback IA open source
- PrÃªt pour CI/CD, Codespaces, cloud souverain, production, dÃ©mo, contribution

ðŸ‡«ðŸ‡· Routes Django REST science (sÃ©curitÃ©, multilingue, souverainetÃ©)
ðŸ‡¬ðŸ‡§ Django REST science routes (security, multilingual, sovereignty)
ðŸ‡¦ðŸ‡ª Ù…Ø³Ø§Ø±Ø§Øª Django REST Ù„Ù„Ø¹Ù„ÙˆÙ… (Ø§Ù„Ø£Ù…Ø§Ù†ØŒ Ù…ØªØ¹Ø¯Ø¯ Ø§Ù„Ù„ØºØ§ØªØŒ Ø§Ù„Ø³ÙŠØ§Ø¯Ø©)
âµ£ Iwalen Django REST n tazwart n tamedyazt (amatu, multilingual, sovereignty)
"""

from rest_framework import routers
from django.urls import path, include
from . import views

router = routers.DefaultRouter()
router.register(r'publications', views.PublicationViewSet, basename='publication')
router.register(r'projets', views.ProjetViewSet, basename='projet')
router.register(r'experiences', views.ExperienceViewSet, basename='experience')
router.register(r'jeux_donnees', views.JeuDonneesViewSet, basename='jeu-donnees')
router.register(r'lab_notebooks', views.LabNotebookViewSet, basename='lab-notebook')
router.register(r'chercheurs', views.ChercheurViewSet, basename='chercheur')
router.register(r'institutions', views.InstitutionViewSet, basename='institution')
router.register(r'ia', views.IAScienceViewSet, basename='ia-science')
router.register(r'notifications', views.NotificationViewSet, basename='notification')
router.register(r'rapports', views.RapportViewSet, basename='rapport')
router.register(r'audit/logs', views.AuditLogViewSet, basename='audit-log')

urlpatterns = [
    path('', include(router.urls)),
]

# SÃ©curitÃ©â€¯: endpoints protÃ©gÃ©s JWT, RBAC, logs, chiffrement, anonymisation, traÃ§abilitÃ© scientifique, audit, conformitÃ© RGPD/NIS2
# Multilingueâ€¯: tous les messages dâ€™erreur/succÃ¨s sont traduits (voir serializers.py)
# Fallback IA open sourceâ€¯: tous les endpoints critiques disposent dâ€™un fallback open source
# Extensibleâ€¯: ajoutez vos endpoints (analyse IA, open data, gÃ©nÃ©ration doc, etc.)
# PrÃªt CI/CD, Codespaces, cloud souverain, production, dÃ©mo, contribution
