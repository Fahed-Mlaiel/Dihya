"""
Dihya â€“ Django Validators API Routes Ultra AvancÃ©
-------------------------------------------------
- Endpoints REST pour validation emails, fichiers, schÃ©mas JSON/XML, identitÃ©s, IBAN, SIRET, flux, uploads, IA validation, logs, rapports, audit
- SÃ©curitÃ©, RBAC, logs, chiffrement, conformitÃ© RGPD/NIS2, anonymisation, multilingue, extensibilitÃ©, fallback IA open source
- PrÃªt pour CI/CD, Codespaces, cloud souverain, production, dÃ©mo, contribution

ðŸ‡«ðŸ‡· Routes Django REST validators (sÃ©curitÃ©, multilingue, souverainetÃ©)
ðŸ‡¬ðŸ‡§ Django REST validators routes (security, multilingual, sovereignty)
ðŸ‡¦ðŸ‡ª Ù…Ø³Ø§Ø±Ø§Øª Django REST Ù„Ù„ØªØ­Ù‚Ù‚ (Ø§Ù„Ø£Ù…Ø§Ù†ØŒ Ù…ØªØ¹Ø¯Ø¯ Ø§Ù„Ù„ØºØ§ØªØŒ Ø§Ù„Ø³ÙŠØ§Ø¯Ø©)
âµ£ Iwalen Django REST n tazwart n usenqed (amatu, multilingual, sovereignty)
"""

from rest_framework import routers
from django.urls import path, include
from . import views

router = routers.DefaultRouter()
router.register(r'email', views.EmailValidatorViewSet, basename='email-validator')
router.register(r'file', views.FileValidatorViewSet, basename='file-validator')
router.register(r'schema', views.SchemaValidatorViewSet, basename='schema-validator')
router.register(r'identite', views.IdentiteValidatorViewSet, basename='identite-validator')
router.register(r'iban', views.IBANValidatorViewSet, basename='iban-validator')
router.register(r'siret', views.SIRETValidatorViewSet, basename='siret-validator')
router.register(r'flux', views.FluxValidatorViewSet, basename='flux-validator')
router.register(r'upload', views.UploadValidatorViewSet, basename='upload-validator')
router.register(r'ia', views.IAValidatorViewSet, basename='ia-validator')
router.register(r'logs', views.LogValidatorViewSet, basename='log-validator')
router.register(r'rapports', views.RapportViewSet, basename='rapport')
router.register(r'audit/logs', views.AuditLogViewSet, basename='audit-log')

urlpatterns = [
    path('', include(router.urls)),
]

# SÃ©curitÃ©â€¯: endpoints protÃ©gÃ©s JWT, RBAC, logs, chiffrement, anonymisation, audit, conformitÃ© RGPD/NIS2
# Multilingueâ€¯: tous les messages dâ€™erreur/succÃ¨s sont traduits (voir serializers.py)
# Fallback IA open sourceâ€¯: tous les endpoints critiques disposent dâ€™un fallback open source
# Extensibleâ€¯: ajoutez vos endpoints (validation, IA, open data, gÃ©nÃ©ration doc, etc.)
# PrÃªt CI/CD, Codespaces, cloud souverain, production, dÃ©mo, contribution
