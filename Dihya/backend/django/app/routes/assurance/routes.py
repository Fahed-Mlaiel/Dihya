"""
Dihya â€“ Django Assurance API Routes Ultra AvancÃ©
-----------------------------------------------
- Endpoints REST pour contrats, souscriptions, sinistres, paiements, attestations, notifications, logs, audit
- SÃ©curitÃ©, RBAC, logs, conformitÃ© RGPD/NIS2, multilingue, extensibilitÃ©
- PrÃªt pour CI/CD, Codespaces, cloud souverain, production, dÃ©mo, contribution

ğŸ‡«ğŸ‡· Routes Django REST assurance (sÃ©curitÃ©, multilingue, souverainetÃ©)
ğŸ‡¬ğŸ‡§ Django REST insurance routes (security, multilingual, sovereignty)
ğŸ‡¦ğŸ‡ª Ù…Ø³Ø§Ø±Ø§Øª Django REST Ù„Ù„ØªØ£Ù…ÙŠÙ† (Ø§Ù„Ø£Ù…Ø§Ù†ØŒ Ù…ØªØ¹Ø¯Ø¯ Ø§Ù„Ù„ØºØ§ØªØŒ Ø§Ù„Ø³ÙŠØ§Ø¯Ø©)
âµ£ Iwalen Django REST n taamin (amatu, multilingual, sovereignty)
"""

from rest_framework import routers
from django.urls import path, include
from . import views

router = routers.DefaultRouter()
router.register(r'contrats', views.ContratViewSet, basename='contrat')
router.register(r'souscriptions', views.SouscriptionViewSet, basename='souscription')
router.register(r'sinistres', views.SinistreViewSet, basename='sinistre')
router.register(r'paiements', views.PaiementViewSet, basename='paiement')
router.register(r'attestations', views.AttestationViewSet, basename='attestation')
router.register(r'notifications', views.NotificationViewSet, basename='notification')
router.register(r'audit/logs', views.AuditLogViewSet, basename='audit-log')

urlpatterns = [
    path('', include(router.urls)),
]

# SÃ©curitÃ©â€¯: endpoints protÃ©gÃ©s JWT, RBAC, logs, audit, conformitÃ© RGPD/NIS2
# Multilingueâ€¯: tous les messages dâ€™erreur/succÃ¨s sont traduits (voir serializers.py)
# Extensibleâ€¯: ajoutez vos endpoints (analyse IA, open data, gÃ©nÃ©ration doc, etc.)
# PrÃªt CI/CD, Codespaces, cloud souverain, production, dÃ©mo, contribution
