"""
Dihya â€“ Django Blockchain API Routes Ultra AvancÃ©
-------------------------------------------------
- Endpoints REST pour blocks, transactions, smart contracts, audit
- SÃ©curitÃ©, RBAC, logs, conformitÃ© RGPD/NIS2, multilingue, extensibilitÃ©
- PrÃªt pour CI/CD, Codespaces, cloud souverain, production, dÃ©mo, contribution

ğŸ‡«ğŸ‡· Routes Django REST blockchain (sÃ©curitÃ©, multilingue, souverainetÃ©)
ğŸ‡¬ğŸ‡§ Django REST blockchain routes (security, multilingual, sovereignty)
ğŸ‡¦ğŸ‡ª Ù…Ø³Ø§Ø±Ø§Øª Django REST Ù„Ù„Ø¨Ù„ÙˆÙƒØ´ÙŠÙ† (Ø§Ù„Ø£Ù…Ø§Ù†ØŒ Ù…ØªØ¹Ø¯Ø¯ Ø§Ù„Ù„ØºØ§ØªØŒ Ø§Ù„Ø³ÙŠØ§Ø¯Ø©)
âµ£ Iwalen Django REST n blockchain (amatu, multilingual, sovereignty)
"""

from rest_framework import routers
from django.urls import path, include
from . import views

router = routers.DefaultRouter()
router.register(r'blocks', views.BlockViewSet, basename='block')
router.register(r'transactions', views.TransactionViewSet, basename='transaction')
router.register(r'smartcontracts', views.SmartContractViewSet, basename='smartcontract')
router.register(r'audit/logs', views.AuditLogViewSet, basename='audit-log')

urlpatterns = [
    path('', include(router.urls)),
]

# SÃ©curitÃ©â€¯: endpoints protÃ©gÃ©s JWT, RBAC, logs, chiffrement, audit, conformitÃ© RGPD/NIS2
# Multilingueâ€¯: tous les messages dâ€™erreur/succÃ¨s sont traduits (voir serializers.py)
# Extensibleâ€¯: ajoutez vos endpoints (analyse IA, multi-blockchain, open data, etc.)
# PrÃªt CI/CD, Codespaces, cloud souverain, production, dÃ©mo, contribution
