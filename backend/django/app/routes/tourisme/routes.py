"""
Dihya â€“ Django Tourisme API Routes Ultra AvancÃ©
-----------------------------------------------
- Endpoints REST pour offres, destinations, rÃ©servations, avis, guides, Ã©vÃ©nements, partenaires, IA tourisme, notifications, rapports, logs, audit
- SÃ©curitÃ©, RBAC, logs, chiffrement, conformitÃ© RGPD/NIS2, anonymisation, multilingue, extensibilitÃ©, fallback IA open source
- PrÃªt pour CI/CD, Codespaces, cloud souverain, production, dÃ©mo, contribution

ğŸ‡«ğŸ‡· Routes Django REST tourisme (sÃ©curitÃ©, multilingue, souverainetÃ©)
ğŸ‡¬ğŸ‡§ Django REST tourism routes (security, multilingual, sovereignty)
ğŸ‡¦ğŸ‡ª Ù…Ø³Ø§Ø±Ø§Øª Django REST Ù„Ù„Ø³ÙŠØ§Ø­Ø© (Ø§Ù„Ø£Ù…Ø§Ù†ØŒ Ù…ØªØ¹Ø¯Ø¯ Ø§Ù„Ù„ØºØ§ØªØŒ Ø§Ù„Ø³ÙŠØ§Ø¯Ø©)
âµ£ Iwalen Django REST n tazwart n tunsit (amatu, multilingual, sovereignty)
"""

from rest_framework import routers
from django.urls import path, include
from . import views

router = routers.DefaultRouter()
router.register(r'offres', views.OffreViewSet, basename='offre')
router.register(r'destinations', views.DestinationViewSet, basename='destination')
router.register(r'reservations', views.ReservationViewSet, basename='reservation')
router.register(r'avis', views.AvisViewSet, basename='avis')
router.register(r'guides', views.GuideViewSet, basename='guide')
router.register(r'evenements', views.EvenementViewSet, basename='evenement')
router.register(r'partenaires', views.PartenairesViewSet, basename='partenaire')
router.register(r'ia', views.IATourismeViewSet, basename='ia-tourisme')
router.register(r'notifications', views.NotificationViewSet, basename='notification')
router.register(r'rapports', views.RapportViewSet, basename='rapport')
router.register(r'logs', views.LogTourismeViewSet, basename='log-tourisme')
router.register(r'audit/logs', views.AuditLogViewSet, basename='audit-log')

urlpatterns = [
    path('', include(router.urls)),
]

# SÃ©curitÃ©â€¯: endpoints protÃ©gÃ©s JWT, RBAC, logs, chiffrement, anonymisation, audit, conformitÃ© RGPD/NIS2
# Multilingueâ€¯: tous les messages dâ€™erreur/succÃ¨s sont traduits (voir serializers.py)
# Fallback IA open sourceâ€¯: tous les endpoints critiques disposent dâ€™un fallback open source
# Extensibleâ€¯: ajoutez vos endpoints (analyse IA, open data, gÃ©nÃ©ration doc, etc.)
# PrÃªt CI/CD, Codespaces, cloud souverain, production, dÃ©mo, contribution
