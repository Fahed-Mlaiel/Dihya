"""
Dihya â€“ Django Gamer API Routes Ultra AvancÃ©
--------------------------------------------
- Endpoints REST pour profils, jeux, scores, classements, tournois, succÃ¨s, inventaires, IA gaming, logs, audit
- SÃ©curitÃ©, RBAC, logs, chiffrement, conformitÃ© RGPD/NIS2, multilingue, extensibilitÃ©
- PrÃªt pour CI/CD, Codespaces, cloud souverain, production, dÃ©mo, contribution

ðŸ‡«ðŸ‡· Routes Django REST gamer (sÃ©curitÃ©, multilingue, souverainetÃ©)
ðŸ‡¬ðŸ‡§ Django REST gamer routes (security, multilingual, sovereignty)
ðŸ‡¦ðŸ‡ª Ù…Ø³Ø§Ø±Ø§Øª Django REST Ù„Ù„Ø£Ù„Ø¹Ø§Ø¨ (Ø§Ù„Ø£Ù…Ø§Ù†ØŒ Ù…ØªØ¹Ø¯Ø¯ Ø§Ù„Ù„ØºØ§ØªØŒ Ø§Ù„Ø³ÙŠØ§Ø¯Ø©)
âµ£ Iwalen Django REST n gamer (amatu, multilingual, sovereignty)
"""

from rest_framework import routers
from django.urls import path, include
from . import views

router = routers.DefaultRouter()
router.register(r'profils', views.ProfilViewSet, basename='profil')
router.register(r'jeux', views.JeuViewSet, basename='jeu')
router.register(r'scores', views.ScoreViewSet, basename='score')
router.register(r'classements', views.ClassementViewSet, basename='classement')
router.register(r'tournois', views.TournoiViewSet, basename='tournoi')
router.register(r'succes', views.SuccesViewSet, basename='succes')
router.register(r'inventaires', views.InventaireViewSet, basename='inventaire')
router.register(r'ia', views.IAGamingViewSet, basename='ia-gaming')
router.register(r'notifications', views.NotificationViewSet, basename='notification')
router.register(r'audit/logs', views.AuditLogViewSet, basename='audit-log')

urlpatterns = [
    path('', include(router.urls)),
]

# SÃ©curitÃ©â€¯: endpoints protÃ©gÃ©s JWT, RBAC, logs, chiffrement, audit, conformitÃ© RGPD/NIS2
# Multilingueâ€¯: tous les messages dâ€™erreur/succÃ¨s sont traduits (voir serializers.py)
# Extensibleâ€¯: ajoutez vos endpoints (analyse IA, open data, gÃ©nÃ©ration doc, etc.)
# PrÃªt CI/CD, Codespaces, cloud souverain, production, dÃ©mo, contribution
