"""
Dihya â€“ Django SÃ©curitÃ© API Routes Ultra AvancÃ©
-----------------------------------------------
- Endpoints REST pour utilisateurs, rÃ´les, permissions, MFA, biomÃ©trie, logs, audit, alertes, IA sÃ©curitÃ©, dÃ©tection dâ€™intrusion, conformitÃ© RGPD/NIS2
- SÃ©curitÃ©, RBAC, logs, chiffrement, MFA, biomÃ©trie, dÃ©tection dâ€™intrusion, alertes, anonymisation, multilingue, extensibilitÃ©, fallback IA open source
- PrÃªt pour CI/CD, Codespaces, cloud souverain, production, dÃ©mo, contribution

ğŸ‡«ğŸ‡· Routes Django REST sÃ©curitÃ© (sÃ©curitÃ©, multilingue, souverainetÃ©)
ğŸ‡¬ğŸ‡§ Django REST security routes (security, multilingual, sovereignty)
ğŸ‡¦ğŸ‡ª Ù…Ø³Ø§Ø±Ø§Øª Django REST Ù„Ù„Ø£Ù…Ø§Ù† (Ø§Ù„Ø£Ù…Ø§Ù†ØŒ Ù…ØªØ¹Ø¯Ø¯ Ø§Ù„Ù„ØºØ§ØªØŒ Ø§Ù„Ø³ÙŠØ§Ø¯Ø©)
âµ£ Iwalen Django REST n tazwart n tÉ£ellist (amatu, multilingual, sovereignty)
"""

from rest_framework import routers
from django.urls import path, include
from . import views

router = routers.DefaultRouter()
router.register(r'utilisateurs', views.UtilisateurViewSet, basename='utilisateur')
router.register(r'roles', views.RoleViewSet, basename='role')
router.register(r'permissions', views.PermissionViewSet, basename='permission')
router.register(r'mfa', views.MFAViewSet, basename='mfa')
router.register(r'biometrie', views.BiometrieViewSet, basename='biometrie')
router.register(r'logs', views.LogSecuriteViewSet, basename='log-securite')
router.register(r'audit/logs', views.AuditLogViewSet, basename='audit-log')
router.register(r'alertes', views.AlerteViewSet, basename='alerte')
router.register(r'ia', views.IASecuriteViewSet, basename='ia-securite')
router.register(r'notifications', views.NotificationViewSet, basename='notification')
router.register(r'rapports', views.RapportViewSet, basename='rapport')

urlpatterns = [
    path('', include(router.urls)),
]

# SÃ©curitÃ©â€¯: endpoints protÃ©gÃ©s JWT, RBAC, MFA, biomÃ©trie, logs, chiffrement, dÃ©tection dâ€™intrusion, audit, conformitÃ© RGPD/NIS2
# Multilingueâ€¯: tous les messages dâ€™erreur/succÃ¨s sont traduits (voir serializers.py)
# Fallback IA open sourceâ€¯: tous les endpoints critiques disposent dâ€™un fallback open source
# Extensibleâ€¯: ajoutez vos endpoints (analyse IA, open data, gÃ©nÃ©ration doc, etc.)
# PrÃªt CI/CD, Codespaces, cloud souverain, production, dÃ©mo, contribution
