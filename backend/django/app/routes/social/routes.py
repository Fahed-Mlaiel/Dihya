"""
Dihya â€“ Django Social API Routes Ultra AvancÃ©
---------------------------------------------
- Endpoints REST pour profils, posts, commentaires, likes, partages, abonnements, notifications, IA social, modÃ©ration, rapports, logs, audit
- SÃ©curitÃ©, RBAC, logs, chiffrement, conformitÃ© RGPD/NIS2, anonymisation, modÃ©ration IA, multilingue, extensibilitÃ©, fallback IA open source
- PrÃªt pour CI/CD, Codespaces, cloud souverain, production, dÃ©mo, contribution

ðŸ‡«ðŸ‡· Routes Django REST social (sÃ©curitÃ©, multilingue, souverainetÃ©)
ðŸ‡¬ðŸ‡§ Django REST social routes (security, multilingual, sovereignty)
ðŸ‡¦ðŸ‡ª Ù…Ø³Ø§Ø±Ø§Øª Django REST Ù„Ù„ØªÙˆØ§ØµÙ„ Ø§Ù„Ø§Ø¬ØªÙ…Ø§Ø¹ÙŠ (Ø§Ù„Ø£Ù…Ø§Ù†ØŒ Ù…ØªØ¹Ø¯Ø¯ Ø§Ù„Ù„ØºØ§ØªØŒ Ø§Ù„Ø³ÙŠØ§Ø¯Ø©)
âµ£ Iwalen Django REST n tazwart n tamedyazt n tamedyazt (amatu, multilingual, sovereignty)
"""

from rest_framework import routers
from django.urls import path, include
from . import views

router = routers.DefaultRouter()
router.register(r'profils', views.ProfilViewSet, basename='profil')
router.register(r'posts', views.PostViewSet, basename='post')
router.register(r'commentaires', views.CommentaireViewSet, basename='commentaire')
router.register(r'likes', views.LikeViewSet, basename='like')
router.register(r'partages', views.PartageViewSet, basename='partage')
router.register(r'abonnements', views.AbonnementViewSet, basename='abonnement')
router.register(r'notifications', views.NotificationViewSet, basename='notification')
router.register(r'ia', views.IASocialViewSet, basename='ia-social')
router.register(r'moderation', views.ModerationViewSet, basename='moderation')
router.register(r'rapports', views.RapportViewSet, basename='rapport')
router.register(r'logs', views.LogSocialViewSet, basename='log-social')
router.register(r'audit/logs', views.AuditLogViewSet, basename='audit-log')

urlpatterns = [
    path('', include(router.urls)),
]

# SÃ©curitÃ©â€¯: endpoints protÃ©gÃ©s JWT, RBAC, logs, chiffrement, anonymisation, modÃ©ration IA, audit, conformitÃ© RGPD/NIS2
# Multilingueâ€¯: tous les messages dâ€™erreur/succÃ¨s sont traduits (voir serializers.py)
# Fallback IA open sourceâ€¯: tous les endpoints critiques disposent dâ€™un fallback open source
# Extensibleâ€¯: ajoutez vos endpoints (analyse IA, open data, gÃ©nÃ©ration doc, etc.)
# PrÃªt CI/CD, Codespaces, cloud souverain, production, dÃ©mo, contribution
