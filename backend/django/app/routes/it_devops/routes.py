"""
Dihya â€“ Django IT & DevOps API Routes Ultra AvancÃ©
--------------------------------------------------
- Endpoints REST pour serveurs, dÃ©ploiements, pipelines CI/CD, monitoring, logs, incidents, scripts, inventaire, audits, IA Ops
- SÃ©curitÃ©, RBAC, logs, chiffrement, conformitÃ© RGPD/NIS2, multilingue, extensibilitÃ©, fallback open source
- PrÃªt pour CI/CD, Codespaces, cloud souverain, production, dÃ©mo, contribution

ðŸ‡«ðŸ‡· Routes Django REST IT & DevOps (sÃ©curitÃ©, multilingue, souverainetÃ©)
ðŸ‡¬ðŸ‡§ Django REST IT & DevOps routes (security, multilingual, sovereignty)
ðŸ‡¦ðŸ‡ª Ù…Ø³Ø§Ø±Ø§Øª Django REST Ù„ØªÙ‚Ù†ÙŠØ© Ø§Ù„Ù…Ø¹Ù„ÙˆÙ…Ø§Øª Ùˆ DevOps (Ø§Ù„Ø£Ù…Ø§Ù†ØŒ Ù…ØªØ¹Ø¯Ø¯ Ø§Ù„Ù„ØºØ§ØªØŒ Ø§Ù„Ø³ÙŠØ§Ø¯Ø©)
âµ£ Iwalen Django REST n IT & DevOps (amatu, multilingual, sovereignty)
"""

from rest_framework import routers
from django.urls import path, include
from . import views

router = routers.DefaultRouter()
router.register(r'serveurs', views.ServeurViewSet, basename='serveur')
router.register(r'deploiements', views.DeploiementViewSet, basename='deploiement')
router.register(r'pipelines', views.PipelineViewSet, basename='pipeline')
router.register(r'monitoring', views.MonitoringViewSet, basename='monitoring')
router.register(r'logs', views.LogViewSet, basename='log')
router.register(r'incidents', views.IncidentViewSet, basename='incident')
router.register(r'scripts', views.ScriptViewSet, basename='script')
router.register(r'inventaire', views.InventaireViewSet, basename='inventaire')
router.register(r'iaops', views.IAOpsViewSet, basename='iaops')
router.register(r'notifications', views.NotificationViewSet, basename='notification')
router.register(r'audit/logs', views.AuditLogViewSet, basename='audit-log')

urlpatterns = [
    path('', include(router.urls)),
]

# SÃ©curitÃ©â€¯: endpoints protÃ©gÃ©s JWT, RBAC, logs, chiffrement, audit, conformitÃ© RGPD/NIS2
# Multilingueâ€¯: tous les messages dâ€™erreur/succÃ¨s sont traduits (voir serializers.py)
# Fallback open sourceâ€¯: tous les endpoints critiques disposent dâ€™un fallback open source (exâ€¯: Ansible, Bash, Python)
# Extensibleâ€¯: ajoutez vos endpoints (analyse IA, open data, gÃ©nÃ©ration doc, etc.)
# PrÃªt CI/CD, Codespaces, cloud souverain, production, dÃ©mo, contribution
