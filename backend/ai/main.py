"""
Dihya â€“ AI Backend Entrypoint (Python/Flask)
--------------------------------------------
- Point d'entrÃ©e unique pour le moteur IA Python (multi-stack, multilingue, souverainetÃ©, sÃ©curitÃ©)
- DÃ©marre l'API Flask IA ultra avancÃ©e (voir ai.py)
- PrÃªt pour intÃ©gration, CI/CD, Codespaces, cloud souverain, audit RGPD/NIS2
- Documentation multilingue, RBAC, logs, fallback IA open source

ðŸ‡«ðŸ‡· Point d'entrÃ©e backend IA Python (sÃ©curitÃ©, fallback, multilingue)
ðŸ‡¬ðŸ‡§ Python AI backend entry point (secure, fallback, multilingual)
ðŸ‡¦ðŸ‡ª Ù†Ù‚Ø·Ø© Ø¯Ø®ÙˆÙ„ Ù…Ø­Ø±Ùƒ Ø§Ù„Ø°ÙƒØ§Ø¡ Ø§Ù„Ø§ØµØ·Ù†Ø§Ø¹ÙŠ (Python) Ù…Ø¹ Ø§Ù„Ø£Ù…Ø§Ù† ÙˆØ§Ù„Ø¯Ø¹Ù… Ù…ØªØ¹Ø¯Ø¯ Ø§Ù„Ù„ØºØ§Øª
âµ£ Amuddu n backend IA Python (amatu, fallback, multilingual)
"""

import os
from flask import Flask
from Dihya.backend.ai.ai import ai_bp

def create_app():
    app = Flask(__name__)
    app.config['JSON_AS_ASCII'] = False  # UTF-8 pour multilingue
    app.register_blueprint(ai_bp)
    # SÃ©curitÃ©, logs, RBAC, fallback IA open source, prÃªt CI/CD, Codespaces, production
    return app

if __name__ == "__main__":
    app = create_app()
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port, debug=bool(os.environ.get("DEBUG", False)))
