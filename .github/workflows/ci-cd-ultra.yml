name: CI/CD Ultra Dihya

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build-test-audit:
    runs-on: ubuntu-latest
    env:
      PYTHONUNBUFFERED: 1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install -r backend/requirements-dev.txt || true
      - name: Lint (ruff, flake8)
        run: |
          pip install ruff flake8
          ruff backend/
          flake8 backend/
      - name: Run unit & integration tests
        run: |
          pip install pytest pytest-cov
          pytest --cov=backend --cov-report=xml --cov-report=term-missing
      - name: Run E2E & scripts tests
        run: |
          cd backend/flask/app/scripts
          pytest || true
      - name: Security audit (Bandit)
        run: |
          pip install bandit
          bandit -r backend/ -ll
      - name: Dependency audit (Safety)
        run: |
          pip install safety
          safety check -r backend/requirements.txt || true
      - name: RGPD & accessibility checks
        run: |
          echo "[INFO] RGPD & accessibilité : vérification manuelle/documentée."
      - name: Build & push Docker image
        if: github.ref == 'refs/heads/main'
        run: |
          docker build -t dihya-backend:latest ./backend
          echo "[INFO] Docker image built. Push step à adapter selon registre."
      - name: Archive test & audit reports
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            backend/.coverage*
            backend/coverage.xml
            backend/flask/app/scripts/**/tests/*.xml
            backend/flask/app/scripts/**/tests/*.log
            backend/logs/
      - name: Notify on failure
        if: failure()
        run: |
          echo "[ALERT] CI/CD failed. Notifier l’équipe via webhook/Slack/email."
